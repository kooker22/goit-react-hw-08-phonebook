{"version":3,"sources":["components/AuthNav/AuthNav.module.css","components/UserMenu/UserMenu.module.css","components/NavBar/NavBar.module.css","components/UserMenu/default-avatar.png","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/NavBar/NavBar.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","redux/phonebook/phonebook-actions.js"],"names":["module","exports","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSucces","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","__","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUserName","contacts","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","connect","authSelectors","to","exact","className","styles","link","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","container","src","alt","width","type","btn","onClick","AuthNav","menu","header","Component","component","redirectTo","routeProps","render","props","restricted","ContactsPage","lazy","Register","LogIn","Phonebook","this","onGetCurretnUser","fallback","path","ReactDOM","StrictMode","document","getElementById","value"],"mappings":"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","file":"static/js/main.547dd5ae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"AuthNav_menu__33Ydd\",\"link\":\"AuthNav_link__ygLgX\",\"btn\":\"AuthNav_btn__3wPFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1GaCN\",\"avatar\":\"UserMenu_avatar__3h4W0\",\"name\":\"UserMenu_name__2KwO5\",\"link\":\"UserMenu_link__17uVH\",\"btn\":\"UserMenu_btn__2K0FC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"NavBar_link__eiyMd\"};","module.exports = __webpack_public_path__ + \"static/media/default-avatar.ccafcf34.png\";","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSucces = createAction('auth/getCurrentUserSucces');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSucces,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\r\n  [authActions.getCurrentUserSucces]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSucces]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isAuthenticated,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest);\r\n  try {\r\n    const response = await axios.post('users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.loginRequest);\r\n  try {\r\n    await axios.post('users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSucces(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\nexport default { getIsAuthenticated, getUserName };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\nconst error = createReducer(null, {});\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phonebook: phonebookReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\nconst persistor = persistStore(store);\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './NavBar.module.css';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink to=\"/contacts\" exact className={styles.link}>\r\n      Phonebook\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport styles from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\r\n    <span className={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" className={styles.btn} onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n  <div className={styles.menu}>\r\n    <button type=\"button\" className={styles.btn}>\r\n      <NavLink to=\"/register\" exact className={styles.link}>\r\n        Sign Up\r\n      </NavLink>\r\n    </button>\r\n    <button type=\"button\" className={styles.btn}>\r\n      <NavLink to=\"/login\" exact className={styles.link}>\r\n        Log in\r\n      </NavLink>\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from '../NavBar/NavBar';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","//Core\nimport React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\n\n//Components\n\nimport AppBar from './components/AppBar/AppBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nconst ContactsPage = lazy(() => import('./PhonebookPages/ContactsPage'));\nconst Register = lazy(() => import('./PhonebookPages/RegisterPage'));\nconst LogIn = lazy(() => import('./PhonebookPages/LoginPage'));\nclass Phonebook extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Loading... </p>}>\n          <Switch>\n            <PrivateRoute\n              exact\n              path=\"/contacts\"\n              component={ContactsPage}\n              redirectTo=\"/login\"\n            />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/\"\n              component={Register}\n            />\n            <PublicRoute\n              restricted\n              redirectTo=\"/contacts\"\n              path=\"/login\"\n              component={LogIn}\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(Phonebook);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Phonebook from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <Phonebook />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactError = createAction('contacts/addContactError')\r\n\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactError = createAction('contacts/deleteContactError')\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter', value => ({\r\n  payload: value,\r\n}));\r\n"],"sourceRoot":""}